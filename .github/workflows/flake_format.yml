name: Flake Format and Check

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  flake-check:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Send Initial Telegram Notification
      run: |
        MESSAGE="Checking repo Rishabh5321/nix-dotfiles, please wait for response "
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
          -d chat_id=$CHAT_ID \
          -d text="$MESSAGE"
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Install Nix Linting and Formatting Tools
      run: nix-env -i statix nixpkgs-fmt -f '<nixpkgs>'

    - name: Run Statix Lint
      run: statix fix

    - name: Run Nix Format
      run: nixpkgs-fmt .

    - name: Nix Flake Check
      uses: DeterminateSystems/flake-checker-action@v8

    - name: Commit Changes
      if: success()
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Auto lint/format"

    - name: Determine Result and Failed Step
      id: result-check
      run: |
        if [ "${{ failure() }}" == "true" ]; then
          echo "result=failure" >> $GITHUB_ENV
          for step in ${{ toJson(steps) }}; do
            if [[ $step.outcome == "failure" ]]; then
              echo "failed_step=${step.name}" >> $GITHUB_ENV
              break
            fi
          done
        else
          echo "result=success" >> $GITHUB_ENV
        fi

    - name: Send Final Telegram Notification
      if: always()
      run: |
        if [ "${{ env.result }}" == "failure" ]; then
          MESSAGE="Flake Check: GitHub Action failed at step: ${{ env.failed_step }} ❌"
        else
          MESSAGE="GitHub Action completed successfully: Flake Check - Rishabh5321 ✅"
        fi
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
          -d chat_id=$CHAT_ID \
          -d text="$MESSAGE"
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
